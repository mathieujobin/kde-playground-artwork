<ui version="4.0" >
 <class>ConfigDialog</class>
 <widget class="QWidget" name="ConfigDialog" >
  <property name="geometry" >
   <rect>
    <x>0</x>
    <y>0</y>
    <width>727</width>
    <height>298</height>
   </rect>
  </property>
  <property name="windowTitle" >
   <string>Config Dialog</string>
  </property>
  <layout class="QGridLayout" >
   <item row="0" column="0" >
    <widget class="QTabWidget" name="tabWidget2" >
     <property name="currentIndex" >
      <number>0</number>
     </property>
     <widget class="QWidget" name="tab" >
      <attribute name="title" >
       <string>Ge&amp;neral</string>
      </attribute>
      <layout class="QGridLayout" >
       <item row="0" column="0" >
        <widget class="QGroupBox" name="titleAlign" >
         <property name="title" >
          <string>TitleAlignment</string>
         </property>
         <layout class="QGridLayout" >
          <item row="0" column="0" >
           <widget class="QRadioButton" name="AlignLeft" >
            <property name="whatsThis" >
             <string>Align the title left.</string>
            </property>
            <property name="text" >
             <string>&amp;Left</string>
            </property>
           </widget>
          </item>
          <item row="0" column="1" >
           <widget class="QRadioButton" name="AlignHCenter" >
            <property name="whatsThis" >
             <string>Center the title.</string>
            </property>
            <property name="text" >
             <string>&amp;Center</string>
            </property>
           </widget>
          </item>
          <item row="0" column="2" >
           <widget class="QRadioButton" name="AlignRight" >
            <property name="whatsThis" >
             <string>Align the title right.</string>
            </property>
            <property name="text" >
             <string>&amp;Right</string>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
       <item row="1" column="0" >
        <widget class="QGroupBox" name="roundedCorners" >
         <property name="title" >
          <string>Rounded Top Corners</string>
         </property>
         <layout class="QGridLayout" >
          <item row="0" column="0" >
           <widget class="QRadioButton" name="RoundAlways" >
            <property name="whatsThis" >
             <string>Always draw rounded window top corners.</string>
            </property>
            <property name="text" >
             <string>Alwa&amp;ys</string>
            </property>
           </widget>
          </item>
          <item row="0" column="1" >
           <widget class="QRadioButton" name="NotMaximized" >
            <property name="whatsThis" >
             <string>Draw rounded top corners if the window is not maximized.</string>
            </property>
            <property name="text" >
             <string>Not maximi&amp;zed</string>
            </property>
           </widget>
          </item>
          <item row="0" column="2" >
           <widget class="QRadioButton" name="RoundNever" >
            <property name="whatsThis" >
             <string>Never draw rounded window top corners.</string>
            </property>
            <property name="text" >
             <string>Ne&amp;ver</string>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
       <item row="2" column="0" >
        <widget class="QCheckBox" name="menuClose" >
         <property name="whatsThis" >
          <string>Check this option if you want windows to be closed when you double click the menu button, similar to Microsoft Windows.</string>
         </property>
         <property name="text" >
          <string>Close &amp;windows by double clicking the menu button</string>
         </property>
        </widget>
       </item>
       <item row="3" column="0" >
        <widget class="QCheckBox" name="titleShadow" >
         <property name="whatsThis" >
          <string>Check this option if you want the titlebar text to have a 3D look with a shadow behind it.</string>
         </property>
         <property name="text" >
          <string>Use shadowed &amp;text</string>
         </property>
        </widget>
       </item>
       <item row="4" column="0" >
        <layout class="QHBoxLayout" >
         <item>
          <widget class="QLabel" name="textLabel1_4" >
           <property name="sizePolicy" >
            <sizepolicy vsizetype="Fixed" hsizetype="Minimum" >
             <horstretch>0</horstretch>
             <verstretch>0</verstretch>
            </sizepolicy>
           </property>
           <property name="text" >
            <string>Additional space for title height:</string>
           </property>
           <property name="wordWrap" >
            <bool>false</bool>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QSpinBox" name="addSpace" >
           <property name="specialValueText" >
            <string/>
           </property>
           <property name="suffix" >
            <string comment="Pixel" >px</string>
           </property>
          </widget>
         </item>
         <item>
          <spacer>
           <property name="orientation" >
            <enum>Qt::Horizontal</enum>
           </property>
           <property name="sizeType" >
            <enum>QSizePolicy::Expanding</enum>
           </property>
           <property name="sizeHint" >
            <size>
             <width>71</width>
             <height>21</height>
            </size>
           </property>
          </spacer>
         </item>
        </layout>
       </item>
       <item row="5" column="0" >
        <layout class="QHBoxLayout" >
         <item>
          <widget class="QLabel" name="textLabel1_5" >
           <property name="sizePolicy" >
            <sizepolicy vsizetype="Fixed" hsizetype="Minimum" >
             <horstretch>0</horstretch>
             <verstretch>0</verstretch>
            </sizepolicy>
           </property>
           <property name="text" >
            <string>Titlebarstyle:</string>
           </property>
           <property name="wordWrap" >
            <bool>false</bool>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QComboBox" name="titlebarStyle" >
           <property name="whatsThis" >
            <string>Select the titlebar style.</string>
           </property>
           <item>
            <property name="text" >
             <string>Toplight</string>
            </property>
           </item>
           <item>
            <property name="text" >
             <string>Balanced</string>
            </property>
           </item>
          </widget>
         </item>
         <item>
          <spacer>
           <property name="orientation" >
            <enum>Qt::Horizontal</enum>
           </property>
           <property name="sizeType" >
            <enum>QSizePolicy::Expanding</enum>
           </property>
           <property name="sizeHint" >
            <size>
             <width>301</width>
             <height>21</height>
            </size>
           </property>
          </spacer>
         </item>
        </layout>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="tab" >
      <attribute name="title" >
       <string>Bu&amp;ttons</string>
      </attribute>
      <layout class="QGridLayout" >
       <item row="0" column="0" >
        <layout class="QHBoxLayout" >
         <item>
          <widget class="QLabel" name="textLabel1_2" >
           <property name="sizePolicy" >
            <sizepolicy vsizetype="Fixed" hsizetype="Minimum" >
             <horstretch>0</horstretch>
             <verstretch>0</verstretch>
            </sizepolicy>
           </property>
           <property name="text" >
            <string>Buttontype:</string>
           </property>
           <property name="wordWrap" >
            <bool>false</bool>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QComboBox" name="buttonType" >
           <property name="whatsThis" >
            <string>Select the buttontype.</string>
           </property>
           <item>
            <property name="text" >
             <string>Plastik flat</string>
            </property>
           </item>
           <item>
            <property name="text" >
             <string>Lipstik flat</string>
            </property>
           </item>
           <item>
            <property name="text" >
             <string>Plastik 3D</string>
            </property>
           </item>
           <item>
            <property name="text" >
             <string>Lipstik 3D</string>
            </property>
           </item>
           <item>
            <property name="text" >
             <string>Lipstik bright</string>
            </property>
           </item>
          </widget>
         </item>
         <item>
          <spacer>
           <property name="orientation" >
            <enum>Qt::Horizontal</enum>
           </property>
           <property name="sizeType" >
            <enum>QSizePolicy::MinimumExpanding</enum>
           </property>
           <property name="sizeHint" >
            <size>
             <width>41</width>
             <height>21</height>
            </size>
           </property>
          </spacer>
         </item>
        </layout>
       </item>
       <item row="0" column="1" >
        <widget class="QCheckBox" name="customIconColors" >
         <property name="whatsThis" >
          <string>Allow custom colors for the button icons.</string>
         </property>
         <property name="text" >
          <string>&amp;Custom icon colors</string>
         </property>
        </widget>
       </item>
       <item row="1" column="0" >
        <widget class="QCheckBox" name="customColors" >
         <property name="whatsThis" >
          <string>Allow custom colors for the button background. The colors for the buttonbackground from the colorscheme are used then.</string>
         </property>
         <property name="text" >
          <string>Custom colors for button bac&amp;kground</string>
         </property>
        </widget>
       </item>
       <item rowspan="4" row="1" column="1" >
        <layout class="QHBoxLayout" >
         <item>
          <layout class="QVBoxLayout" >
           <item>
            <widget class="QLabel" name="activeLbl" >
             <property name="text" >
              <string>Active:</string>
             </property>
             <property name="wordWrap" >
              <bool>false</bool>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QLabel" name="activeDownLbl" >
             <property name="text" >
              <string>Active down:</string>
             </property>
             <property name="wordWrap" >
              <bool>false</bool>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QLabel" name="inactiveLbl" >
             <property name="text" >
              <string>Inactive:</string>
             </property>
             <property name="wordWrap" >
              <bool>false</bool>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QLabel" name="inactiveDownLbl" >
             <property name="text" >
              <string>Inactive down:</string>
             </property>
             <property name="wordWrap" >
              <bool>false</bool>
             </property>
            </widget>
           </item>
          </layout>
         </item>
         <item>
          <layout class="QVBoxLayout" >
           <item>
            <widget class="KColorButton" name="activeFgColor" >
             <property name="whatsThis" >
              <string>Color for the icon of the active button.</string>
             </property>
             <property name="text" >
              <string/>
             </property>
            </widget>
           </item>
           <item>
            <widget class="KColorButton" name="activeBgColor" >
             <property name="whatsThis" >
              <string>Color for the icon of the active button when pressed.</string>
             </property>
             <property name="text" >
              <string/>
             </property>
            </widget>
           </item>
           <item>
            <widget class="KColorButton" name="inactiveFgColor" >
             <property name="whatsThis" >
              <string>Color for the icon of the inactive button.</string>
             </property>
             <property name="text" >
              <string/>
             </property>
            </widget>
           </item>
           <item>
            <widget class="KColorButton" name="inactiveBgColor" >
             <property name="whatsThis" >
              <string>Color for the icon of the inactive button when pressed.</string>
             </property>
             <property name="text" >
              <string/>
             </property>
            </widget>
           </item>
          </layout>
         </item>
        </layout>
       </item>
       <item rowspan="4" row="1" column="2" >
        <spacer>
         <property name="orientation" >
          <enum>Qt::Horizontal</enum>
         </property>
         <property name="sizeType" >
          <enum>QSizePolicy::Expanding</enum>
         </property>
         <property name="sizeHint" >
          <size>
           <width>16</width>
           <height>120</height>
          </size>
         </property>
        </spacer>
       </item>
       <item row="2" column="0" >
        <widget class="QCheckBox" name="useTitleProps" >
         <property name="whatsThis" >
          <string>Use the titlefont settings (color, shadow) for the button icons. Overrides the custom color settings.</string>
         </property>
         <property name="text" >
          <string>&amp;Use titlefont settings for button icons</string>
         </property>
        </widget>
       </item>
       <item row="3" column="0" >
        <widget class="QCheckBox" name="animateButtons" >
         <property name="whatsThis" >
          <string>Check this option if you want the buttons to fade in when the mouse pointer hovers over them and fade out again when it moves away.</string>
         </property>
         <property name="text" >
          <string>A&amp;nimate buttons</string>
         </property>
        </widget>
       </item>
       <item row="4" column="0" >
        <widget class="QCheckBox" name="redCloseButton" >
         <property name="whatsThis" >
          <string>Paint the icon of the closebutton in red (this overrides all other colorsettings).</string>
         </property>
         <property name="text" >
          <string>&amp;Red closebutton icon</string>
         </property>
        </widget>
       </item>
       <item row="5" column="0" >
        <layout class="QHBoxLayout" >
         <item>
          <widget class="QLabel" name="textLabel1_3" >
           <property name="sizePolicy" >
            <sizepolicy vsizetype="Fixed" hsizetype="Minimum" >
             <horstretch>0</horstretch>
             <verstretch>0</verstretch>
            </sizepolicy>
           </property>
           <property name="text" >
            <string>Iconsize:</string>
           </property>
           <property name="wordWrap" >
            <bool>false</bool>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QSpinBox" name="iconSize" >
           <property name="suffix" >
            <string comment="Percent of Buttonheight" >%</string>
           </property>
          </widget>
         </item>
         <item>
          <spacer>
           <property name="orientation" >
            <enum>Qt::Horizontal</enum>
           </property>
           <property name="sizeType" >
            <enum>QSizePolicy::MinimumExpanding</enum>
           </property>
           <property name="sizeHint" >
            <size>
             <width>171</width>
             <height>21</height>
            </size>
           </property>
          </spacer>
         </item>
        </layout>
       </item>
       <item row="5" column="1" >
        <widget class="QCheckBox" name="iconShadow" >
         <property name="whatsThis" >
          <string>Check this if you want to have shadows for the button icons on active windows.</string>
         </property>
         <property name="text" >
          <string>Shado&amp;w for icons</string>
         </property>
        </widget>
       </item>
       <item row="6" column="0" colspan="3" >
        <spacer>
         <property name="orientation" >
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeType" >
          <enum>QSizePolicy::MinimumExpanding</enum>
         </property>
         <property name="sizeHint" >
          <size>
           <width>350</width>
           <height>16</height>
          </size>
         </property>
        </spacer>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="TabPage" >
      <attribute name="title" >
       <string>&amp;Logo</string>
      </attribute>
      <layout class="QVBoxLayout" >
       <item>
        <widget class="QCheckBox" name="titleBarLogo" >
         <property name="whatsThis" >
          <string>Check this if you want to see the titlebar logo in the titlebar.</string>
         </property>
         <property name="text" >
          <string>Show &amp;titlebar logo</string>
         </property>
        </widget>
       </item>
       <item>
        <layout class="QHBoxLayout" >
         <item>
          <widget class="QLabel" name="textLabel2" >
           <property name="sizePolicy" >
            <sizepolicy vsizetype="Fixed" hsizetype="Minimum" >
             <horstretch>0</horstretch>
             <verstretch>0</verstretch>
            </sizepolicy>
           </property>
           <property name="text" >
            <string>Offset from title:</string>
           </property>
           <property name="wordWrap" >
            <bool>false</bool>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QSpinBox" name="titleBarLogoOffset" >
           <property name="suffix" >
            <string comment="Pixel" >px</string>
           </property>
          </widget>
         </item>
         <item>
          <spacer>
           <property name="orientation" >
            <enum>Qt::Horizontal</enum>
           </property>
           <property name="sizeHint" >
            <size>
             <width>40</width>
             <height>20</height>
            </size>
           </property>
          </spacer>
         </item>
        </layout>
       </item>
       <item>
        <layout class="QHBoxLayout" >
         <item>
          <widget class="QLabel" name="textLabel1" >
           <property name="sizePolicy" >
            <sizepolicy vsizetype="Fixed" hsizetype="Minimum" >
             <horstretch>0</horstretch>
             <verstretch>0</verstretch>
            </sizepolicy>
           </property>
           <property name="text" >
            <string>Logo preview:</string>
           </property>
           <property name="wordWrap" >
            <bool>false</bool>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QLabel" name="logoImage" >
           <property name="sizePolicy" >
            <sizepolicy vsizetype="Minimum" hsizetype="Minimum" >
             <horstretch>0</horstretch>
             <verstretch>0</verstretch>
            </sizepolicy>
           </property>
           <property name="minimumSize" >
            <size>
             <width>20</width>
             <height>20</height>
            </size>
           </property>
           <property name="maximumSize" >
            <size>
             <width>120</width>
             <height>20</height>
            </size>
           </property>
           <property name="frameShadow" >
            <enum>QFrame::Plain</enum>
           </property>
           <property name="text" >
            <string/>
           </property>
           <property name="wordWrap" >
            <bool>false</bool>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QPushButton" name="selectButton" >
           <property name="whatsThis" >
            <string>Select the titlebar logo image.</string>
           </property>
           <property name="text" >
            <string>Sele&amp;ct Image</string>
           </property>
          </widget>
         </item>
         <item>
          <spacer>
           <property name="orientation" >
            <enum>Qt::Horizontal</enum>
           </property>
           <property name="sizeHint" >
            <size>
             <width>40</width>
             <height>20</height>
            </size>
           </property>
          </spacer>
         </item>
        </layout>
       </item>
       <item>
        <spacer>
         <property name="orientation" >
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" >
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
      </layout>
     </widget>
    </widget>
   </item>
  </layout>
 </widget>
 <layoutdefault spacing="6" margin="11" />
 <pixmapfunction>qPixmapFromMimeSource</pixmapfunction>
 <customwidgets>
  <customwidget>
   <class>KColorButton</class>
   <extends>QPushButton</extends>
   <header>kcolorbutton.h</header>
  </customwidget>
 </customwidgets>
 <tabstops>
  <tabstop>AlignLeft</tabstop>
  <tabstop>AlignHCenter</tabstop>
  <tabstop>AlignRight</tabstop>
  <tabstop>RoundAlways</tabstop>
  <tabstop>NotMaximized</tabstop>
  <tabstop>RoundNever</tabstop>
  <tabstop>titleShadow</tabstop>
  <tabstop>animateButtons</tabstop>
  <tabstop>buttonType</tabstop>
  <tabstop>menuClose</tabstop>
  <tabstop>titleBarLogo</tabstop>
  <tabstop>selectButton</tabstop>
 </tabstops>
 <includes>
  <include location="local" >knuminput.h</include>
  <include location="local" >knuminput.h</include>
  <include location="local" >kcolorbutton.h</include>
  <include location="local" >kcolorbutton.h</include>
  <include location="local" >kcolorbutton.h</include>
  <include location="local" >kcolorbutton.h</include>
  <include location="local" >knuminput.h</include>
 </includes>
 <resources/>
 <connections/>
</ui>
